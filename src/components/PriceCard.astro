---
interface Props {
  title: string;
  amount: {
    decimal: string | number;
    cents: string | number;
  };
  previousAmount?: string; // Make previousAmount optional
  details: string[];
  button: {
    label: string;
    url: string;
  };
  position: "left" | "main" | "right";
  mostPopular?: boolean;
}

const {
  title,
  amount,
  details,
  button,
  position,
  mostPopular = false,
  previousAmount,
} = Astro.props;

const cardClasses = {
  left: "h-full backdrop-blur-sm bg-white/90",
  main: "rounded-lg bg-white",
  right: "h-full backdrop-blur-sm bg-white/90",
};

import Checkmark from "./icons/Checkmark.astro";
---

<div class="flex-1 flex flex-col h-full">
  <div class="bg-white/95 px-6 py-10 rounded-t-lg">
    {
      mostPopular && (
        <div class="absolute inset-x-0 top-0 transform -translate-y-1/2">
          <div class="flex justify-center">
            <span class="inline-flex rounded-full bg-yellow-400 px-4 py-1 text-sm font-semibold text-gray-800 uppercase">
              Most Popular
            </span>
          </div>
        </div>
      )
    }
    <div>
      <h3 class="text-center text-2xl font-medium text-gray-800" id={position}>
        {title}
      </h3>
      <div class="mt-4 flex items-center justify-center">
        <span
          class="px-1 flex items-start text-6xl tracking-tight text-gray-800"
        >
          <span class="font-extrabold">${amount.decimal}</span>
          <span class="text-2xl font-medium text-gray-600">.{amount.cents}</span
          >
        </span>
      </div>
    </div>
  </div>

  <div
    class="flex-1 flex flex-col justify-between border-t border-gray-200 p-6 bg-gray-50/95 rounded-b-lg"
  >
    <ul class="space-y-4">
      {
        details.map((item) => (
          <li class="flex items-start">
            <div class="flex-shrink-0">
              <svg
                class="h-6 w-6 text-yellow-500"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M5 13l4 4L19 7"
                />
              </svg>
            </div>
            <p class="ml-3 text-base font-medium text-gray-600">{item}</p>
          </li>
        ))
      }
    </ul>
    <div class="mt-8">
      <div class="rounded-lg shadow-md">
        <a
          target="blank"
          href={button.url}
          class:list={[
            "block w-full text-center rounded-lg px-6 py-4 text-lg leading-6 font-semibold transition duration-300 ease-in-out",
            position === "main"
              ? "bg-yellow-400 text-gray-800 hover:bg-yellow-500"
              : "bg-gray-200 text-gray-800 hover:bg-gray-300",
          ]}
        >
          {button.label}
        </a>
      </div>
    </div>
  </div>
</div>
