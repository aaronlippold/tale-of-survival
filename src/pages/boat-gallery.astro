---
import Layout from "../layouts/Layout.astro";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import { Icon } from "astro-icon/components";

// Import all boat images using import.meta.glob instead of Astro.glob
const imageFiles = import.meta.glob<{ default: ImageMetadata }>(
  "../assets/images/boat-*.{png,jpg,jpeg,webp,svg}",
  { eager: true }
);

const images = Object.entries(imageFiles).map(([path, file], index) => ({
  url: file.default,
  alt:
    path
      .split("/")
      .pop()
      ?.replace(/boat-(.+?)\.[^.]+$/, "$1") || "",
  id: index,
}));

const totalImages = images.length;
---

<Layout title="Boat Gallery">
  <div class="container mx-auto px-4 py-8">
    <div class="flex flex-col items-center gap-2 mb-8">
      <h1 class="text-3xl font-bold text-center text-book-gray">
        Boat Gallery
      </h1>
      <p class="text-gray-600 text-sm">
        {totalImages} Image{totalImages !== 1 ? "s" : ""} in Gallery
      </p>
    </div>

    <div class="relative max-w-5xl mx-auto">
      <div class="aspect-[16/9] bg-gray-100 rounded-lg shadow-lg relative">
        <div class="swiper w-full h-full">
          <div class="swiper-wrapper">
            {
              images.map((image) => (
                <div class="swiper-slide">
                  <div class="w-full h-full flex items-center justify-center p-4">
                    <figure class="relative max-w-[95%] h-full">
                      <Image
                        src={image.url}
                        alt={image.alt}
                        width={1280}
                        height={720}
                        class="h-full w-auto object-contain rounded-lg"
                      />
                      <figcaption class="absolute bottom-0 inset-x-0 p-2 text-center text-white bg-black/60 backdrop-blur-sm rounded-b-lg">
                        {image.alt}
                      </figcaption>
                    </figure>
                  </div>
                </div>
              ))
            }
          </div>
          <div class="swiper-pagination"></div>
          <button
            class="swiper-button-prev flex items-center justify-center w-12 h-12 rounded-full bg-black/30 hover:bg-black/50 transition-all absolute left-4 top-1/2 -translate-y-1/2 z-10"
            aria-label="Previous slide"
          >
            <Icon
              name="heroicons:chevron-left-20-solid"
              class="w-8 h-8 text-amber-500"
              aria-hidden="true"
            />
          </button>
          <button
            class="swiper-button-next flex items-center justify-center w-12 h-12 rounded-full bg-black/30 hover:bg-black/50 transition-all absolute right-4 top-1/2 -translate-y-1/2 z-10"
            aria-label="Next slide"
          >
            <Icon
              name="heroicons:chevron-right-20-solid"
              class="w-8 h-8 text-amber-500"
              aria-hidden="true"
            />
          </button>
        </div>
      </div>

      <div class="mt-4">
        <div class="swiper-thumbs h-20">
          <div class="swiper-wrapper">
            {
              images.map((image) => (
                <div class="swiper-slide !w-24 cursor-pointer">
                  <Image
                    src={image.url}
                    alt={image.alt}
                    width={100}
                    height={100}
                    class="h-full w-full object-cover rounded opacity-50 hover:opacity-100 transition-opacity"
                  />
                </div>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  import Swiper from "swiper";
  import { Navigation, Pagination, Keyboard, Thumbs } from "swiper/modules";
  import "swiper/css";
  import "swiper/css/navigation";
  import "swiper/css/pagination";

  function initGallery() {
    // Initialize thumbnail swiper
    const thumbsSwiper = new Swiper(".swiper-thumbs", {
      modules: [Navigation],
      slidesPerView: "auto",
      spaceBetween: 8,
      watchSlidesProgress: true,
    });

    // Initialize main swiper
    const mainSwiper = new Swiper(".swiper", {
      modules: [Navigation, Pagination, Keyboard, Thumbs],
      slidesPerView: 1,
      spaceBetween: 0,
      grabCursor: true,
      touchRatio: 2,
      keyboard: {
        enabled: true,
      },
      pagination: {
        el: ".swiper-pagination",
        clickable: true,
      },
      navigation: {
        nextEl: ".swiper-button-next",
        prevEl: ".swiper-button-prev",
      },
      thumbs: {
        swiper: thumbsSwiper,
      },
    });

    return mainSwiper;
  }

  // Handle initialization
  if (document.readyState === "complete") {
    initGallery();
  } else {
    document.addEventListener("DOMContentLoaded", initGallery);
  }
  document.addEventListener("astro:page-load", initGallery);
</script>

<style>
  :root {
    --swiper-theme-color: #f59e0b;
  }

  /* Remove default swiper button styles */
  .swiper-button-next::after,
  .swiper-button-prev::after {
    content: none;
  }

  /* Hide default swiper navigation arrows */
  .swiper-button-next,
  .swiper-button-prev {
    margin: 0; /* Remove swiper's default margins */
    &::after {
      display: none;
    }
  }

  .swiper-slide-thumb-active img {
    @apply opacity-100 ring-2 ring-amber-500;
  }
</style>
